openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/completion:
    post:
      summary: ''
      operationId: postApiCompletion
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/image:
    post:
      summary: ''
      operationId: postApiImage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/problems-and-goals:
    post:
      summary: 'Create Problems and Goals'
      operationId: createProblemsAndGoals
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Problems and Goals'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transcriptId:
                  type: integer
                  description: 'Id of the transcript.'
                  example: 10
              required:
                - transcriptId
      security: []
  '/api/problems-and-goals/{id}':
    post:
      summary: 'Update Problems and Goals'
      operationId: updateProblemsAndGoals
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Problems and Goals'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                problemGoalText:
                  type: string
                  description: 'text of the ProblemsAndGoals.'
                  example: iste
              required:
                - problemGoalText
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Id of the problems and goals.'
        example: 16
        required: true
        schema:
          type: integer
  /api/project-overview:
    post:
      summary: 'Create Project Overview'
      operationId: createProjectOverview
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Project Overview'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                problemGoalID:
                  type: integer
                  description: 'Id of the ProblemsAndGoals.'
                  example: 20
              required:
                - problemGoalID
      security: []
  '/api/project-overview/{id}':
    post:
      summary: 'Update Project Overview'
      operationId: updateProjectOverview
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Project Overview'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                overviewText:
                  type: string
                  description: 'text of the ProjectOverview.'
                  example: illum
              required:
                - overviewText
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Id of the ProjectOverview.'
        example: 17
        required: true
        schema:
          type: integer
  /api/project-summery:
    get:
      summary: 'Get Project Summery List'
      operationId: getProjectSummeryList
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'page number.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'page number.'
            example: 10
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 10
                  data: []
                  first_page_url: 'http://localhost:8000/api/project-summery?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'http://localhost:8000/api/project-summery?page=1'
                  links:
                    -
                      url: 'http://localhost:8000/api/project-summery?page=9'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://localhost:8000/api/project-summery?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://localhost:8000/api/project-summery'
                  per_page: 10
                  prev_page_url: 'http://localhost:8000/api/project-summery?page=9'
                  to: null
                  total: 1
                properties:
                  current_page:
                    type: integer
                    example: 10
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'http://localhost:8000/api/project-summery?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://localhost:8000/api/project-summery?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'http://localhost:8000/api/project-summery?page=9'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost:8000/api/project-summery?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: 'http://localhost:8000/api/project-summery?page=9'
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://localhost:8000/api/project-summery'
                  per_page:
                    type: integer
                    example: 10
                  prev_page_url:
                    type: string
                    example: 'http://localhost:8000/api/project-summery?page=9'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Project Summery'
      security: []
    post:
      summary: 'Create Project Summery'
      operationId: createProjectSummery
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Project Summery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transcriptText:
                  type: string
                  description: 'The text of the transcript.'
                  example: modi
                projectName:
                  type: string
                  description: 'The name of the project.'
                  example: itaque
                clientPhone:
                  type: string
                  description: 'The phone number of the client.'
                  example: facilis
                clientEmail:
                  type: string
                  description: 'The email of the client.'
                  example: qwalter@example.net
                clientWebsite:
                  type: string
                  description: 'The website of the client.'
                  example: qui
              required:
                - transcriptText
                - projectName
      security: []
  '/api/project-summery/{id}':
    get:
      summary: 'Show Project Summery'
      operationId: showProjectSummery
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Data Showed Successfully'
                  data: null
                properties:
                  message:
                    type: string
                    example: 'Data Showed Successfully'
                  data:
                    type: string
                    example: null
      tags:
        - 'Project Summery'
      security: []
    put:
      summary: 'Update Project Summery'
      operationId: updateProjectSummery
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Project Summery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                summaryText:
                  type: integer
                  description: 'summaryText of the Project Summery.'
                  example: 1
              required:
                - summaryText
      security: []
    delete:
      summary: 'Delete Project Summery'
      operationId: deleteProjectSummery
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Project Summery'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. Id of the transcript.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 8
  /api/scope-of-work:
    post:
      summary: 'Create Scope Of Work'
      operationId: createScopeOfWork
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Scope Of Work'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                problemGoalID:
                  type: integer
                  description: 'Id of the ProblemsAndGoals.'
                  example: 20
              required:
                - problemGoalID
      security: []
  '/api/scope-of-work/{id}':
    post:
      summary: 'Update Scope Of Work'
      operationId: updateScopeOfWork
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Scope Of Work'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeText:
                  type: string
                  description: 'text of the Scope of Work.'
                  example: a
              required:
                - scopeText
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Id of the Scope of Work.'
        example: 10
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'Problems and Goals'
    description: ''
  -
    name: 'Project Overview'
    description: ''
  -
    name: 'Project Summery'
    description: ''
  -
    name: 'Scope Of Work'
    description: ''
