openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/register:
    post:
      summary: 'Register a new user.'
      operationId: registerANewUser
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: 1
                    name: 'John Doe'
                    email: john.doe@example.com
                    created_at: '2023-07-28 12:00:00'
                    updated_at: '2023-07-28 12:00:00'
                  token: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john.doe@example.com
                      created_at:
                        type: string
                        example: '2023-07-28 12:00:00'
                      updated_at:
                        type: string
                        example: '2023-07-28 12:00:00'
                  token:
                    type: string
                    example: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    email:
                      - 'The email has already been taken.'
                properties:
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email has already been taken.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'The email of the user.'
                  example: john.doe@example.com
                password:
                  type: string
                  description: 'The password of the user.'
                  example: secret
              required:
                - name
                - email
                - password
      security: []
  /api/login:
    post:
      summary: 'Log in a user.'
      operationId: logInAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: 1
                    name: 'John Doe'
                    email: john.doe@example.com
                    created_at: '2023-07-28 12:00:00'
                    updated_at: '2023-07-28 12:00:00'
                  token: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john.doe@example.com
                      created_at:
                        type: string
                        example: '2023-07-28 12:00:00'
                      updated_at:
                        type: string
                        example: '2023-07-28 12:00:00'
                  token:
                    type: string
                    example: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid credentials'
                properties:
                  message:
                    type: string
                    example: 'Invalid credentials'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: john.doe@example.com
                password:
                  type: string
                  description: 'The password of the user.'
                  example: secret
              required:
                - email
                - password
      security: []
  /api/completion:
    post:
      summary: ''
      operationId: postApiCompletion
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/image:
    post:
      summary: ''
      operationId: postApiImage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/meeting-summery:
    get:
      summary: 'Get Meeting Summery List'
      operationId: getMeetingSummeryList
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'page number.'
          example: 6
          required: false
          schema:
            type: integer
            description: 'page number.'
            example: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  total: 0
                  current_page: 6
                properties:
                  data:
                    type: array
                    example: []
                  total:
                    type: integer
                    example: 0
                  current_page:
                    type: integer
                    example: 6
      tags:
        - 'Meeting Summery'
      security: []
    post:
      summary: 'Create Meeting Summery'
      operationId: createMeetingSummery
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Meeting Summery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transcriptText:
                  type: string
                  description: 'The text of the transcript.'
                  example: perspiciatis
              required:
                - transcriptText
      security: []
  '/api/meeting-summery/{id}':
    get:
      summary: 'Show Meeting Summery'
      operationId: showMeetingSummery
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Data Showed Successfully'
                  data: null
                properties:
                  message:
                    type: string
                    example: 'Data Showed Successfully'
                  data:
                    type: string
                    example: null
      tags:
        - 'Meeting Summery'
      security: []
    put:
      summary: 'Update Meeting Summery'
      operationId: updateMeetingSummery
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Meeting Summery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                summaryText:
                  type: integer
                  description: 'summaryText of the SOW Meeting Summery.'
                  example: 13
              required:
                - summaryText
      security: []
    delete:
      summary: 'Meeting Summery'
      operationId: meetingSummery
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Meeting Summery'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. Id of the transcript.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 20
  /api/problems-and-goals:
    post:
      summary: 'Create Problems and Goals'
      operationId: createProblemsAndGoals
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Problems and Goals'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transcriptId:
                  type: integer
                  description: 'Id of the transcript.'
                  example: 3
              required:
                - transcriptId
      security: []
  '/api/problems-and-goals/{id}':
    post:
      summary: 'Update Problems and Goals'
      operationId: updateProblemsAndGoals
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Problems and Goals'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                problemGoalText:
                  type: string
                  description: 'text of the ProblemsAndGoals.'
                  example: praesentium
              required:
                - problemGoalText
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Id of the problems and goals.'
        example: 7
        required: true
        schema:
          type: integer
  /api/project-components:
    get:
      summary: 'Get all project components'
      operationId: getAllProjectComponents
      description: 'Get a list of all project components.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      project_id: 1
                      component_id: 1
                      quantity: 3
                      created_at: '2023-07-01T12:00:00Z'
                      updated_at: '2023-07-01T12:30:00Z'
                    -
                      project_id: 1
                      component_id: 2
                      quantity: 2
                      created_at: '2023-07-02T09:00:00Z'
                      updated_at: '2023-07-02T09:30:00Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        project_id: 1
                        component_id: 1
                        quantity: 3
                        created_at: '2023-07-01T12:00:00Z'
                        updated_at: '2023-07-01T12:30:00Z'
                      -
                        project_id: 1
                        component_id: 2
                        quantity: 2
                        created_at: '2023-07-02T09:00:00Z'
                        updated_at: '2023-07-02T09:30:00Z'
                    items:
                      type: object
                      properties:
                        project_id:
                          type: integer
                          example: 1
                        component_id:
                          type: integer
                          example: 1
                        quantity:
                          type: integer
                          example: 3
                        created_at:
                          type: string
                          example: '2023-07-01T12:00:00Z'
                        updated_at:
                          type: string
                          example: '2023-07-01T12:30:00Z'
      tags:
        - 'Project Components'
      security: []
    post:
      summary: 'Add components to a project'
      operationId: addComponentsToAProject
      description: 'Add website components to a specific project.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      project_id: 1
                      component_id: 1
                      quantity: 3
                      created_at: '2023-07-01T12:00:00Z'
                      updated_at: '2023-07-01T12:30:00Z'
                    -
                      project_id: 1
                      component_id: 2
                      quantity: 2
                      created_at: '2023-07-02T09:00:00Z'
                      updated_at: '2023-07-02T09:30:00Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        project_id: 1
                        component_id: 1
                        quantity: 3
                        created_at: '2023-07-01T12:00:00Z'
                        updated_at: '2023-07-01T12:30:00Z'
                      -
                        project_id: 1
                        component_id: 2
                        quantity: 2
                        created_at: '2023-07-02T09:00:00Z'
                        updated_at: '2023-07-02T09:30:00Z'
                    items:
                      type: object
                      properties:
                        project_id:
                          type: integer
                          example: 1
                        component_id:
                          type: integer
                          example: 1
                        quantity:
                          type: integer
                          example: 3
                        created_at:
                          type: string
                          example: '2023-07-01T12:00:00Z'
                        updated_at:
                          type: string
                          example: '2023-07-01T12:30:00Z'
      tags:
        - 'Project Components'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: integer
                  description: 'The ID of the project.'
                  example: 1
                components:
                  type: array
                  description: 'An array of component details.'
                  example:
                    - earum
                  items:
                    type: string
              required:
                - project_id
                - components
      security: []
  '/api/project-components/{id}':
    get:
      summary: 'Show a project component'
      operationId: showAProjectComponent
      description: 'Get details of a specific project component grouped by category_id.'
      parameters:
        -
          in: query
          name: project_id
          description: 'The ID of the project.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the project.'
            example: '1'
        -
          in: query
          name: component_id
          description: 'The ID of the website component.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the website component.'
            example: '1'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    category_id_1:
                      category_name: 'Category A'
                      total_cost: 1500
                      components:
                        -
                          project_id: 1
                          component_id: 1
                          component_name: 'Component X'
                          quantity: 3
                          total_component_cost: 900
                          created_at: '2023-07-01T12:00:00Z'
                          updated_at: '2023-07-01T12:30:00Z'
                        -
                          project_id: 1
                          component_id: 2
                          component_name: 'Component Y'
                          quantity: 2
                          total_component_cost: 600
                          created_at: '2023-07-02T09:00:00Z'
                          updated_at: '2023-07-02T09:30:00Z'
                    category_id_2:
                      category_name: 'Category B'
                      total_cost: 500
                      components:
                        -
                          project_id: 1
                          component_id: 3
                          component_name: 'Component Z'
                          quantity: 1
                          total_component_cost: 500
                          created_at: '2023-07-03T10:00:00Z'
                          updated_at: '2023-07-03T10:30:00Z'
                  grand_total: 2000
                properties:
                  data:
                    type: object
                    properties:
                      category_id_1:
                        type: object
                        properties:
                          category_name:
                            type: string
                            example: 'Category A'
                          total_cost:
                            type: integer
                            example: 1500
                          components:
                            type: array
                            example:
                              -
                                project_id: 1
                                component_id: 1
                                component_name: 'Component X'
                                quantity: 3
                                total_component_cost: 900
                                created_at: '2023-07-01T12:00:00Z'
                                updated_at: '2023-07-01T12:30:00Z'
                              -
                                project_id: 1
                                component_id: 2
                                component_name: 'Component Y'
                                quantity: 2
                                total_component_cost: 600
                                created_at: '2023-07-02T09:00:00Z'
                                updated_at: '2023-07-02T09:30:00Z'
                            items:
                              type: object
                              properties:
                                project_id:
                                  type: integer
                                  example: 1
                                component_id:
                                  type: integer
                                  example: 1
                                component_name:
                                  type: string
                                  example: 'Component X'
                                quantity:
                                  type: integer
                                  example: 3
                                total_component_cost:
                                  type: integer
                                  example: 900
                                created_at:
                                  type: string
                                  example: '2023-07-01T12:00:00Z'
                                updated_at:
                                  type: string
                                  example: '2023-07-01T12:30:00Z'
                      category_id_2:
                        type: object
                        properties:
                          category_name:
                            type: string
                            example: 'Category B'
                          total_cost:
                            type: integer
                            example: 500
                          components:
                            type: array
                            example:
                              -
                                project_id: 1
                                component_id: 3
                                component_name: 'Component Z'
                                quantity: 1
                                total_component_cost: 500
                                created_at: '2023-07-03T10:00:00Z'
                                updated_at: '2023-07-03T10:30:00Z'
                            items:
                              type: object
                              properties:
                                project_id:
                                  type: integer
                                  example: 1
                                component_id:
                                  type: integer
                                  example: 3
                                component_name:
                                  type: string
                                  example: 'Component Z'
                                quantity:
                                  type: integer
                                  example: 1
                                total_component_cost:
                                  type: integer
                                  example: 500
                                created_at:
                                  type: string
                                  example: '2023-07-03T10:00:00Z'
                                updated_at:
                                  type: string
                                  example: '2023-07-03T10:30:00Z'
                  grand_total:
                    type: integer
                    example: 2000
      tags:
        - 'Project Components'
      security: []
    put:
      summary: 'Update components of a project'
      operationId: updateComponentsOfAProject
      description: 'Update details of website components in a specific project.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      project_id: 1
                      component_id: 1
                      quantity: 5
                      created_at: '2023-07-01T12:00:00Z'
                      updated_at: '2023-07-03T09:30:00Z'
                    -
                      project_id: 1
                      component_id: 2
                      quantity: 3
                      created_at: '2023-07-02T09:00:00Z'
                      updated_at: '2023-07-03T09:30:00Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        project_id: 1
                        component_id: 1
                        quantity: 5
                        created_at: '2023-07-01T12:00:00Z'
                        updated_at: '2023-07-03T09:30:00Z'
                      -
                        project_id: 1
                        component_id: 2
                        quantity: 3
                        created_at: '2023-07-02T09:00:00Z'
                        updated_at: '2023-07-03T09:30:00Z'
                    items:
                      type: object
                      properties:
                        project_id:
                          type: integer
                          example: 1
                        component_id:
                          type: integer
                          example: 1
                        quantity:
                          type: integer
                          example: 5
                        created_at:
                          type: string
                          example: '2023-07-01T12:00:00Z'
                        updated_at:
                          type: string
                          example: '2023-07-03T09:30:00Z'
      tags:
        - 'Project Components'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                components:
                  type: array
                  description: 'An array of component details.'
                  example:
                    - sint
                  items:
                    type: string
                project_id:
                  type: integer
                  description: 'The ID of the project.'
                  example: 1
              required:
                - components
                - project_id
      security: []
    delete:
      summary: 'Delete a project component'
      operationId: deleteAProjectComponent
      description: 'Delete a specific project component.'
      parameters:
        -
          in: query
          name: project_id
          description: 'The ID of the project.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the project.'
            example: '1'
        -
          in: query
          name: component_id
          description: 'The ID of the website component.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the website component.'
            example: '1'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Project component deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Project component deleted successfully'
      tags:
        - 'Project Components'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the project component.'
        example: qui
        required: true
        schema:
          type: string
  /api/project-overview:
    post:
      summary: 'Create Project Overview'
      operationId: createProjectOverview
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Project Overview'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                problemGoalID:
                  type: integer
                  description: 'Id of the ProblemsAndGoals.'
                  example: 19
              required:
                - problemGoalID
      security: []
  '/api/project-overview/{id}':
    post:
      summary: 'Update Project Overview'
      operationId: updateProjectOverview
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Project Overview'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                overviewText:
                  type: string
                  description: 'text of the ProjectOverview.'
                  example: corporis
              required:
                - overviewText
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Id of the ProjectOverview.'
        example: 20
        required: true
        schema:
          type: integer
  /api/projects:
    get:
      summary: 'Get all projects'
      operationId: getAllProjects
      description: 'Get a list of all projects.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      project_id: 1
                      project_name: 'Project A'
                      project_description: 'This is project A'
                      total_cost: '1000.00'
                      created_at: '2023-07-01T12:00:00Z'
                      updated_at: '2023-07-01T12:30:00Z'
                    -
                      project_id: 2
                      project_name: 'Project B'
                      project_description: 'This is project B'
                      total_cost: '2000.00'
                      created_at: '2023-07-02T09:00:00Z'
                      updated_at: '2023-07-02T09:30:00Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        project_id: 1
                        project_name: 'Project A'
                        project_description: 'This is project A'
                        total_cost: '1000.00'
                        created_at: '2023-07-01T12:00:00Z'
                        updated_at: '2023-07-01T12:30:00Z'
                      -
                        project_id: 2
                        project_name: 'Project B'
                        project_description: 'This is project B'
                        total_cost: '2000.00'
                        created_at: '2023-07-02T09:00:00Z'
                        updated_at: '2023-07-02T09:30:00Z'
                    items:
                      type: object
                      properties:
                        project_id:
                          type: integer
                          example: 1
                        project_name:
                          type: string
                          example: 'Project A'
                        project_description:
                          type: string
                          example: 'This is project A'
                        total_cost:
                          type: string
                          example: '1000.00'
                        created_at:
                          type: string
                          example: '2023-07-01T12:00:00Z'
                        updated_at:
                          type: string
                          example: '2023-07-01T12:30:00Z'
      tags:
        - Projects
      security: []
    post:
      summary: 'Store a new project'
      operationId: storeANewProject
      description: 'Create a new project.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    project_id: 3
                    project_name: 'Project C'
                    project_description: 'This is project C'
                    total_cost: '3000.00'
                    created_at: '2023-07-03T09:00:00Z'
                    updated_at: '2023-07-03T09:30:00Z'
                properties:
                  data:
                    type: object
                    properties:
                      project_id:
                        type: integer
                        example: 3
                      project_name:
                        type: string
                        example: 'Project C'
                      project_description:
                        type: string
                        example: 'This is project C'
                      total_cost:
                        type: string
                        example: '3000.00'
                      created_at:
                        type: string
                        example: '2023-07-03T09:00:00Z'
                      updated_at:
                        type: string
                        example: '2023-07-03T09:30:00Z'
      tags:
        - Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_name:
                  type: string
                  description: 'The name of the project.'
                  example: 'Project C'
                project_description:
                  type: string
                  description: 'The description of the project.'
                  example: 'This is project C'
                total_cost:
                  type: numeric
                  description: 'The total cost of the project.'
                  example: '3000.00'
              required:
                - project_name
                - project_description
                - total_cost
      security: []
  '/api/projects/{project_id}':
    get:
      summary: 'Show a project'
      operationId: showAProject
      description: 'Get details of a specific project.'
      parameters:
        -
          in: query
          name: project_id
          description: 'The ID of the project.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the project.'
            example: '1'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    project_id: 1
                    project_name: 'Project A'
                    project_description: 'This is project A'
                    total_cost: '1000.00'
                    created_at: '2023-07-01T12:00:00Z'
                    updated_at: '2023-07-01T12:30:00Z'
                properties:
                  data:
                    type: object
                    properties:
                      project_id:
                        type: integer
                        example: 1
                      project_name:
                        type: string
                        example: 'Project A'
                      project_description:
                        type: string
                        example: 'This is project A'
                      total_cost:
                        type: string
                        example: '1000.00'
                      created_at:
                        type: string
                        example: '2023-07-01T12:00:00Z'
                      updated_at:
                        type: string
                        example: '2023-07-01T12:30:00Z'
      tags:
        - Projects
      security: []
    put:
      summary: 'Update a project'
      operationId: updateAProject
      description: 'Update details of a specific project.'
      parameters:
        -
          in: query
          name: project_id
          description: 'The ID of the project.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the project.'
            example: '1'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    project_id: 1
                    project_name: 'Updated Project A'
                    project_description: 'Updated project A description'
                    total_cost: '1200.00'
                    created_at: '2023-07-01T12:00:00Z'
                    updated_at: '2023-07-03T09:30:00Z'
                properties:
                  data:
                    type: object
                    properties:
                      project_id:
                        type: integer
                        example: 1
                      project_name:
                        type: string
                        example: 'Updated Project A'
                      project_description:
                        type: string
                        example: 'Updated project A description'
                      total_cost:
                        type: string
                        example: '1200.00'
                      created_at:
                        type: string
                        example: '2023-07-01T12:00:00Z'
                      updated_at:
                        type: string
                        example: '2023-07-03T09:30:00Z'
      tags:
        - Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_name:
                  type: string
                  description: 'The name of the project.'
                  example: 'Updated Project A'
                project_description:
                  type: string
                  description: 'The description of the project.'
                  example: 'Updated project A description'
                total_cost:
                  type: numeric
                  description: 'The total cost of the project.'
                  example: '1200.00'
              required:
                - project_name
                - project_description
                - total_cost
      security: []
    delete:
      summary: 'Delete a project'
      operationId: deleteAProject
      description: 'Delete a specific project.'
      parameters:
        -
          in: query
          name: project_id
          description: 'The ID of the project.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the project.'
            example: '1'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Project deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Project deleted successfully'
      tags:
        - Projects
      security: []
    parameters:
      -
        in: path
        name: project_id
        description: 'The ID of the project.'
        example: 2
        required: true
        schema:
          type: integer
  /api/prompts:
    get:
      summary: 'Display a listing of prompts.'
      operationId: displayAListingOfPrompts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  total: 0
                  current_page: 1
                properties:
                  data:
                    type: array
                    example: []
                  total:
                    type: integer
                    example: 0
                  current_page:
                    type: integer
                    example: 1
      tags:
        - 'Prompts Management'
      security: []
    post:
      summary: 'Store a newly created prompt.'
      operationId: storeANewlyCreatedPrompt
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Prompts Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: integer
                  description: 'The type of the prompt (corresponding to PromptType Enum values).'
                  example: 1
                prompt:
                  type: string
                  description: 'The content of the prompt.'
                  example: '"Example prompt content."'
                name:
                  type: string
                  description: 'The name of the prompt.'
                  example: '"Example prompt name."'
              required:
                - type
                - prompt
                - name
      security: []
  '/api/prompts/{id}':
    get:
      summary: 'Display the specified prompt.'
      operationId: displayTheSpecifiedPrompt
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Prompt] 4'
                  exception: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Exceptions\Handler.php'
                  line: 487
                  trace:
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Exceptions\Handler.php'
                      line: 463
                      function: prepareException
                      class: Illuminate\Foundation\Exceptions\Handler
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\nunomaduro\collision\src\Adapters\Laravel\ExceptionHandler.php'
                      line: 54
                      function: render
                      class: Illuminate\Foundation\Exceptions\Handler
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Pipeline.php'
                      line: 51
                      function: render
                      class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 143
                      function: handleException
                      class: Illuminate\Routing\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                      line: 159
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                      line: 135
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                      line: 87
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 800
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 777
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 741
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 730
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 99
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Http\Middleware\HandleCors.php'
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 299
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 287
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 92
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 45
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 209
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 166
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 124
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 71
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 49
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 51
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 37
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 211
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\symfony\console\Command\Command.php'
                      line: 326
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 181
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\symfony\console\Application.php'
                      line: 1081
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\symfony\console\Application.php'
                      line: 320
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\symfony\console\Application.php'
                      line: 174
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 201
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'E:\PLAYGROUND\laragpt\artisan'
                      line: 37
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Prompt] 4'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                  file:
                    type: string
                    example: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Exceptions\Handler.php'
                  line:
                    type: integer
                    example: 487
                  trace:
                    type: array
                    example:
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Exceptions\Handler.php'
                        line: 463
                        function: prepareException
                        class: Illuminate\Foundation\Exceptions\Handler
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\nunomaduro\collision\src\Adapters\Laravel\ExceptionHandler.php'
                        line: 54
                        function: render
                        class: Illuminate\Foundation\Exceptions\Handler
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Pipeline.php'
                        line: 51
                        function: render
                        class: NunoMaduro\Collision\Adapters\Laravel\ExceptionHandler
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 143
                        function: handleException
                        class: Illuminate\Routing\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                        line: 159
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                        line: 135
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Middleware\ThrottleRequests.php'
                        line: 87
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 800
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 777
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 741
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 730
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 99
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Http\Middleware\HandleCors.php'
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 299
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 287
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 92
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 45
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 209
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 166
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 124
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 71
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 49
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 51
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 37
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 211
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\symfony\console\Command\Command.php'
                        line: 326
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 181
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\symfony\console\Application.php'
                        line: 1081
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\symfony\console\Application.php'
                        line: 320
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\symfony\console\Application.php'
                        line: 174
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 201
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'E:\PLAYGROUND\laragpt\artisan'
                        line: 37
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'E:\PLAYGROUND\laragpt\vendor\laravel\framework\src\Illuminate\Foundation\Exceptions\Handler.php'
                        line:
                          type: integer
                          example: 463
                        function:
                          type: string
                          example: prepareException
                        class:
                          type: string
                          example: Illuminate\Foundation\Exceptions\Handler
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Prompts Management'
      security: []
    put:
      summary: 'Update the specified prompt.'
      operationId: updateTheSpecifiedPrompt
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Prompts Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: integer
                  description: 'The type of the prompt (corresponding to PromptType Enum values).'
                  example: 2
                prompt:
                  type: string
                  description: 'The content of the prompt.'
                  example: '"Updated prompt content."'
                name:
                  type: string
                  description: 'The content of the name.'
                  example: '"Updated prompt name."'
              required:
                - type
                - prompt
                - name
      security: []
    delete:
      summary: 'Remove the specified prompt from storage.'
      operationId: removeTheSpecifiedPromptFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Prompts Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the prompt.'
        example: 4
        required: true
        schema:
          type: integer
      -
        in: path
        name: prompt
        description: 'The ID of the prompt to display.'
        example: '1'
        required: true
        schema:
          type: string
  /api/project-summery:
    get:
      summary: 'Get SOW Meeting Summery List'
      operationId: getSOWMeetingSummeryList
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'page number.'
          example: 20
          required: false
          schema:
            type: integer
            description: 'page number.'
            example: 20
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  total: 2
                  current_page: 20
                properties:
                  data:
                    type: array
                    example: []
                  total:
                    type: integer
                    example: 2
                  current_page:
                    type: integer
                    example: 20
      tags:
        - 'SOW Meeting Summery'
      security: []
    post:
      summary: 'Create SOW Meeting Summery'
      operationId: createSOWMeetingSummery
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'SOW Meeting Summery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transcriptText:
                  type: string
                  description: 'The text of the transcript.'
                  example: exercitationem
                projectName:
                  type: string
                  description: 'The name of the project.'
                  example: et
                clientPhone:
                  type: string
                  description: 'The phone number of the client.'
                  example: eum
                clientEmail:
                  type: string
                  description: 'The email of the client.'
                  example: jschinner@example.com
                clientWebsite:
                  type: string
                  description: 'The website of the client.'
                  example: iure
              required:
                - transcriptText
                - projectName
      security: []
  '/api/project-summery/{id}':
    get:
      summary: 'Show SOW Meeting Summery'
      operationId: showSOWMeetingSummery
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Data Showed Successfully'
                  data: null
                properties:
                  message:
                    type: string
                    example: 'Data Showed Successfully'
                  data:
                    type: string
                    example: null
      tags:
        - 'SOW Meeting Summery'
      security: []
    put:
      summary: 'Update SOW Meeting Summery'
      operationId: updateSOWMeetingSummery
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'SOW Meeting Summery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                summaryText:
                  type: integer
                  description: 'summaryText of the SOW Meeting Summery.'
                  example: 6
              required:
                - summaryText
      security: []
    delete:
      summary: 'Delete SOW Meeting Summery'
      operationId: deleteSOWMeetingSummery
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'SOW Meeting Summery'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. Id of the transcript.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 15
  /api/scope-of-work:
    post:
      summary: 'Create Scope Of Work'
      operationId: createScopeOfWork
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Scope Of Work'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                problemGoalID:
                  type: integer
                  description: 'Id of the ProblemsAndGoals.'
                  example: 10
              required:
                - problemGoalID
      security: []
  '/api/scope-of-work/{id}':
    post:
      summary: 'Update Scope Of Work'
      operationId: updateScopeOfWork
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Scope Of Work'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scopeText:
                  type: string
                  description: 'text of the Scope of Work.'
                  example: consequuntur
              required:
                - scopeText
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Id of the Scope of Work.'
        example: 12
        required: true
        schema:
          type: integer
  /api/categories:
    get:
      summary: 'Get all website component categories'
      operationId: getAllWebsiteComponentCategories
      description: 'Get a list of all website component categories.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      category_id: 1
                      category_name: Header
                      created_at: '2023-07-01T12:00:00Z'
                      updated_at: '2023-07-01T12:30:00Z'
                    -
                      category_id: 2
                      category_name: Footer
                      created_at: '2023-07-02T09:00:00Z'
                      updated_at: '2023-07-02T09:30:00Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        category_id: 1
                        category_name: Header
                        created_at: '2023-07-01T12:00:00Z'
                        updated_at: '2023-07-01T12:30:00Z'
                      -
                        category_id: 2
                        category_name: Footer
                        created_at: '2023-07-02T09:00:00Z'
                        updated_at: '2023-07-02T09:30:00Z'
                    items:
                      type: object
                      properties:
                        category_id:
                          type: integer
                          example: 1
                        category_name:
                          type: string
                          example: Header
                        created_at:
                          type: string
                          example: '2023-07-01T12:00:00Z'
                        updated_at:
                          type: string
                          example: '2023-07-01T12:30:00Z'
      tags:
        - 'Website Component Categories'
      security: []
    post:
      summary: 'Store a new website component category'
      operationId: storeANewWebsiteComponentCategory
      description: 'Create a new website component category.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    category_id: 3
                    category_name: Sidebar
                    created_at: '2023-07-03T09:00:00Z'
                    updated_at: '2023-07-03T09:30:00Z'
                properties:
                  data:
                    type: object
                    properties:
                      category_id:
                        type: integer
                        example: 3
                      category_name:
                        type: string
                        example: Sidebar
                      created_at:
                        type: string
                        example: '2023-07-03T09:00:00Z'
                      updated_at:
                        type: string
                        example: '2023-07-03T09:30:00Z'
      tags:
        - 'Website Component Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  description: 'The name of the website component category.'
                  example: Header
              required:
                - category_name
      security: []
  '/api/categories/{category_id}':
    get:
      summary: 'Show a website component category'
      operationId: showAWebsiteComponentCategory
      description: 'Get details of a specific website component category.'
      parameters:
        -
          in: query
          name: category_id
          description: 'The ID of the website component category.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the website component category.'
            example: '1'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    category_id: 1
                    category_name: Header
                    created_at: '2023-07-01T12:00:00Z'
                    updated_at: '2023-07-01T12:30:00Z'
                properties:
                  data:
                    type: object
                    properties:
                      category_id:
                        type: integer
                        example: 1
                      category_name:
                        type: string
                        example: Header
                      created_at:
                        type: string
                        example: '2023-07-01T12:00:00Z'
                      updated_at:
                        type: string
                        example: '2023-07-01T12:30:00Z'
      tags:
        - 'Website Component Categories'
      security: []
    put:
      summary: 'Update a website component category'
      operationId: updateAWebsiteComponentCategory
      description: 'Update details of a specific website component category.'
      parameters:
        -
          in: query
          name: category_id
          description: 'The ID of the website component category.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the website component category.'
            example: '1'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    category_id: 1
                    category_name: 'Updated Header'
                    created_at: '2023-07-01T12:00:00Z'
                    updated_at: '2023-07-03T09:30:00Z'
                properties:
                  data:
                    type: object
                    properties:
                      category_id:
                        type: integer
                        example: 1
                      category_name:
                        type: string
                        example: 'Updated Header'
                      created_at:
                        type: string
                        example: '2023-07-01T12:00:00Z'
                      updated_at:
                        type: string
                        example: '2023-07-03T09:30:00Z'
      tags:
        - 'Website Component Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  description: 'The name of the website component category.'
                  example: 'Updated Header'
              required:
                - category_name
      security: []
    delete:
      summary: 'Delete a website component category'
      operationId: deleteAWebsiteComponentCategory
      description: 'Delete a specific website component category.'
      parameters:
        -
          in: query
          name: category_id
          description: 'The ID of the website component category.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the website component category.'
            example: '1'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Website component category deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Website component category deleted successfully'
      tags:
        - 'Website Component Categories'
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: 5
        required: true
        schema:
          type: integer
  /api/components:
    get:
      summary: 'Get all website components'
      operationId: getAllWebsiteComponents
      description: 'Get a list of all website components.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      component_id: 1
                      component_name: Logo
                      category_id: 1
                      component_description: 'Company logo for header'
                      component_cost: '50.00'
                      category:
                        category_id: 1
                        category_name: Header
                        created_at: '2023-07-01T12:00:00Z'
                        updated_at: '2023-07-01T12:30:00Z'
                      created_at: '2023-07-01T12:00:00Z'
                      updated_at: '2023-07-01T12:30:00Z'
                    -
                      component_id: 2
                      component_name: 'Contact Form'
                      category_id: 1
                      component_description: 'Contact form for footer'
                      component_cost: '100.00'
                      category:
                        category_id: 1
                        category_name: Footer
                        created_at: '2023-07-02T09:00:00Z'
                        updated_at: '2023-07-02T09:30:00Z'
                      created_at: '2023-07-02T09:00:00Z'
                      updated_at: '2023-07-02T09:30:00Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        component_id: 1
                        component_name: Logo
                        category_id: 1
                        component_description: 'Company logo for header'
                        component_cost: '50.00'
                        category:
                          category_id: 1
                          category_name: Header
                          created_at: '2023-07-01T12:00:00Z'
                          updated_at: '2023-07-01T12:30:00Z'
                        created_at: '2023-07-01T12:00:00Z'
                        updated_at: '2023-07-01T12:30:00Z'
                      -
                        component_id: 2
                        component_name: 'Contact Form'
                        category_id: 1
                        component_description: 'Contact form for footer'
                        component_cost: '100.00'
                        category:
                          category_id: 1
                          category_name: Footer
                          created_at: '2023-07-02T09:00:00Z'
                          updated_at: '2023-07-02T09:30:00Z'
                        created_at: '2023-07-02T09:00:00Z'
                        updated_at: '2023-07-02T09:30:00Z'
                    items:
                      type: object
                      properties:
                        component_id:
                          type: integer
                          example: 1
                        component_name:
                          type: string
                          example: Logo
                        category_id:
                          type: integer
                          example: 1
                        component_description:
                          type: string
                          example: 'Company logo for header'
                        component_cost:
                          type: string
                          example: '50.00'
                        category:
                          type: object
                          properties:
                            category_id:
                              type: integer
                              example: 1
                            category_name:
                              type: string
                              example: Header
                            created_at:
                              type: string
                              example: '2023-07-01T12:00:00Z'
                            updated_at:
                              type: string
                              example: '2023-07-01T12:30:00Z'
                        created_at:
                          type: string
                          example: '2023-07-01T12:00:00Z'
                        updated_at:
                          type: string
                          example: '2023-07-01T12:30:00Z'
      tags:
        - 'Website Components'
      security: []
    post:
      summary: 'Store a new website component'
      operationId: storeANewWebsiteComponent
      description: 'Create a new website component.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    component_id: 3
                    component_name: Banner
                    category_id: 1
                    component_description: 'Banner image for header'
                    component_cost: '80.00'
                    category:
                      category_id: 1
                      category_name: Header
                      created_at: '2023-07-01T12:00:00Z'
                      updated_at: '2023-07-01T12:30:00Z'
                    created_at: '2023-07-03T09:00:00Z'
                    updated_at: '2023-07-03T09:30:00Z'
                properties:
                  data:
                    type: object
                    properties:
                      component_id:
                        type: integer
                        example: 3
                      component_name:
                        type: string
                        example: Banner
                      category_id:
                        type: integer
                        example: 1
                      component_description:
                        type: string
                        example: 'Banner image for header'
                      component_cost:
                        type: string
                        example: '80.00'
                      category:
                        type: object
                        properties:
                          category_id:
                            type: integer
                            example: 1
                          category_name:
                            type: string
                            example: Header
                          created_at:
                            type: string
                            example: '2023-07-01T12:00:00Z'
                          updated_at:
                            type: string
                            example: '2023-07-01T12:30:00Z'
                      created_at:
                        type: string
                        example: '2023-07-03T09:00:00Z'
                      updated_at:
                        type: string
                        example: '2023-07-03T09:30:00Z'
      tags:
        - 'Website Components'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                component_name:
                  type: string
                  description: 'The name of the website component.'
                  example: Logo
                category_id:
                  type: integer
                  description: 'The ID of the website component category.'
                  example: 1
                component_description:
                  type: string
                  description: 'The description of the website component.'
                  example: 'Company logo for header'
                component_cost:
                  type: numeric
                  description: 'The cost of the website component.'
                  example: '50.00'
              required:
                - component_name
                - category_id
                - component_description
                - component_cost
      security: []
  '/api/components/{component_id}':
    get:
      summary: 'Show a website component'
      operationId: showAWebsiteComponent
      description: 'Get details of a specific website component.'
      parameters:
        -
          in: query
          name: component_id
          description: 'The ID of the website component.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the website component.'
            example: '1'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    component_id: 1
                    component_name: Logo
                    category_id: 1
                    component_description: 'Company logo for header'
                    component_cost: '50.00'
                    category:
                      category_id: 1
                      category_name: Header
                      created_at: '2023-07-01T12:00:00Z'
                      updated_at: '2023-07-01T12:30:00Z'
                    created_at: '2023-07-01T12:00:00Z'
                    updated_at: '2023-07-01T12:30:00Z'
                properties:
                  data:
                    type: object
                    properties:
                      component_id:
                        type: integer
                        example: 1
                      component_name:
                        type: string
                        example: Logo
                      category_id:
                        type: integer
                        example: 1
                      component_description:
                        type: string
                        example: 'Company logo for header'
                      component_cost:
                        type: string
                        example: '50.00'
                      category:
                        type: object
                        properties:
                          category_id:
                            type: integer
                            example: 1
                          category_name:
                            type: string
                            example: Header
                          created_at:
                            type: string
                            example: '2023-07-01T12:00:00Z'
                          updated_at:
                            type: string
                            example: '2023-07-01T12:30:00Z'
                      created_at:
                        type: string
                        example: '2023-07-01T12:00:00Z'
                      updated_at:
                        type: string
                        example: '2023-07-01T12:30:00Z'
      tags:
        - 'Website Components'
      security: []
    put:
      summary: 'Update a website component'
      operationId: updateAWebsiteComponent
      description: 'Update details of a specific website component.'
      parameters:
        -
          in: query
          name: component_id
          description: 'The ID of the website component.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the website component.'
            example: '1'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    component_id: 1
                    component_name: 'Updated Logo'
                    category_id: 1
                    component_description: 'Updated company logo for header'
                    component_cost: '60.00'
                    category:
                      category_id: 1
                      category_name: Header
                      created_at: '2023-07-01T12:00:00Z'
                      updated_at: '2023-07-01T12:30:00Z'
                    created_at: '2023-07-01T12:00:00Z'
                    updated_at: '2023-07-03T09:30:00Z'
                properties:
                  data:
                    type: object
                    properties:
                      component_id:
                        type: integer
                        example: 1
                      component_name:
                        type: string
                        example: 'Updated Logo'
                      category_id:
                        type: integer
                        example: 1
                      component_description:
                        type: string
                        example: 'Updated company logo for header'
                      component_cost:
                        type: string
                        example: '60.00'
                      category:
                        type: object
                        properties:
                          category_id:
                            type: integer
                            example: 1
                          category_name:
                            type: string
                            example: Header
                          created_at:
                            type: string
                            example: '2023-07-01T12:00:00Z'
                          updated_at:
                            type: string
                            example: '2023-07-01T12:30:00Z'
                      created_at:
                        type: string
                        example: '2023-07-01T12:00:00Z'
                      updated_at:
                        type: string
                        example: '2023-07-03T09:30:00Z'
      tags:
        - 'Website Components'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                component_name:
                  type: string
                  description: 'The name of the website component.'
                  example: 'Updated Logo'
                category_id:
                  type: integer
                  description: 'The ID of the website component category.'
                  example: 1
                component_description:
                  type: string
                  description: 'The description of the website component.'
                  example: 'Updated company logo for header'
                component_cost:
                  type: numeric
                  description: 'The cost of the website component.'
                  example: '60.00'
              required:
                - component_name
                - category_id
                - component_description
                - component_cost
      security: []
    delete:
      summary: 'Delete a website component'
      operationId: deleteAWebsiteComponent
      description: 'Delete a specific website component.'
      parameters:
        -
          in: query
          name: component_id
          description: 'The ID of the website component.'
          example: '1'
          required: true
          schema:
            type: string
            description: 'The ID of the website component.'
            example: '1'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Website component deleted successfully'
                properties:
                  message:
                    type: string
                    example: 'Website component deleted successfully'
      tags:
        - 'Website Components'
      security: []
    parameters:
      -
        in: path
        name: component_id
        description: 'The ID of the component.'
        example: 5
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPIs for user registration"
  -
    name: Endpoints
    description: ''
  -
    name: 'Meeting Summery'
    description: ''
  -
    name: 'Problems and Goals'
    description: ''
  -
    name: 'Project Components'
    description: "\nAPIs for managing project components."
  -
    name: 'Project Overview'
    description: ''
  -
    name: Projects
    description: "\nAPIs for managing projects."
  -
    name: 'Prompts Management'
    description: '* @queryParam page integer page number.'
  -
    name: 'SOW Meeting Summery'
    description: ''
  -
    name: 'Scope Of Work'
    description: ''
  -
    name: 'Website Component Categories'
    description: "\nAPIs for managing website component categories."
  -
    name: 'Website Components'
    description: "\nAPIs for managing website components."
