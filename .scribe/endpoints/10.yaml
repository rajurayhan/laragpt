name: 'Project Components'
description: |-

  APIs for managing project components.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/project-components
    metadata:
      groupName: 'Project Components'
      groupDescription: |-

        APIs for managing project components.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all project components'
      description: 'Get a list of all project components.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
               {
                   "project_id": 1,
                   "component_id": 1,
                   "quantity": 3,
                   "created_at": "2023-07-01T12:00:00Z",
                   "updated_at": "2023-07-01T12:30:00Z"
               },
               {
                   "project_id": 1,
                   "component_id": 2,
                   "quantity": 2,
                   "created_at": "2023-07-02T09:00:00Z",
                   "updated_at": "2023-07-02T09:30:00Z"
               }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/project-components
    metadata:
      groupName: 'Project Components'
      groupDescription: |-

        APIs for managing project components.
      subgroup: ''
      subgroupDescription: ''
      title: 'Add components to a project'
      description: 'Add website components to a specific project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      components:
        name: components
        description: 'An array of component details.'
        required: true
        example:
          - velit
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'components[].component_id':
        name: 'components[].component_id'
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'components[].quantity':
        name: 'components[].quantity'
        description: 'Must be at least 1.'
        required: true
        example: 87
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'components.*.component_id':
        name: 'components.*.component_id'
        description: 'The ID of the website component.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'components.*.quantity':
        name: 'components.*.quantity'
        description: 'The quantity of the website component.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      project_id: 1
      components:
        - velit
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
               {
                   "project_id": 1,
                   "component_id": 1,
                   "quantity": 3,
                   "created_at": "2023-07-01T12:00:00Z",
                   "updated_at": "2023-07-01T12:30:00Z"
               },
               {
                   "project_id": 1,
                   "component_id": 2,
                   "quantity": 2,
                   "created_at": "2023-07-02T09:00:00Z",
                   "updated_at": "2023-07-02T09:30:00Z"
               }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/project-components/{id}'
    metadata:
      groupName: 'Project Components'
      groupDescription: |-

        APIs for managing project components.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a project component'
      description: 'Get details of a specific project component grouped by category_id.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project component.'
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: eum
    queryParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      component_id:
        name: component_id
        description: 'The ID of the website component.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      project_id: '1'
      component_id: '1'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": {
                  "category_id_1": {
                      "category_name": "Category A",
                      "total_cost": 1500,
                      "components": [
                          {
                              "project_id": 1,
                              "component_id": 1,
                              "component_name": "Component X",
                              "quantity": 3,
                              "total_component_cost": 900,
                              "created_at": "2023-07-01T12:00:00Z",
                              "updated_at": "2023-07-01T12:30:00Z"
                          },
                          {
                              "project_id": 1,
                              "component_id": 2,
                              "component_name": "Component Y",
                              "quantity": 2,
                              "total_component_cost": 600,
                              "created_at": "2023-07-02T09:00:00Z",
                              "updated_at": "2023-07-02T09:30:00Z"
                          }
                      ]
                  },
                  "category_id_2": {
                      "category_name": "Category B",
                      "total_cost": 500,
                      "components": [
                          {
                              "project_id": 1,
                              "component_id": 3,
                              "component_name": "Component Z",
                              "quantity": 1,
                              "total_component_cost": 500,
                              "created_at": "2023-07-03T10:00:00Z",
                              "updated_at": "2023-07-03T10:30:00Z"
                          }
                      ]
                  }
              },
              "grand_total": 2000
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/project-components/{id}'
    metadata:
      groupName: 'Project Components'
      groupDescription: |-

        APIs for managing project components.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update components of a project'
      description: 'Update details of website components in a specific project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project component.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: ut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      components:
        name: components
        description: 'An array of component details.'
        required: true
        example:
          - culpa
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'components[].component_id':
        name: 'components[].component_id'
        description: ''
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'components[].quantity':
        name: 'components[].quantity'
        description: 'Must be at least 1.'
        required: true
        example: 83
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'components.*.component_id':
        name: 'components.*.component_id'
        description: 'The ID of the website component.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'components.*.quantity':
        name: 'components.*.quantity'
        description: 'The quantity of the website component.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      components:
        - culpa
      project_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
               {
                   "project_id": 1,
                   "component_id": 1,
                   "quantity": 5,
                   "created_at": "2023-07-01T12:00:00Z",
                   "updated_at": "2023-07-03T09:30:00Z"
               },
               {
                   "project_id": 1,
                   "component_id": 2,
                   "quantity": 3,
                   "created_at": "2023-07-02T09:00:00Z",
                   "updated_at": "2023-07-03T09:30:00Z"
               }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/project-components/{id}'
    metadata:
      groupName: 'Project Components'
      groupDescription: |-

        APIs for managing project components.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a project component'
      description: 'Delete a specific project component.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project component.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: ut
    queryParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      component_id:
        name: component_id
        description: 'The ID of the website component.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      project_id: '1'
      component_id: '1'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Project component deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
